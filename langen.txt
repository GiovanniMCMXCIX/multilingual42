"""
This is the outputs file for 42
please fill in each line for your language
where a tag (e.g. {0}) is supplied, please use it.

most variables shouldnt be too hard to understand
context for, but if there is any confusion, just ask
squas about the context.

Please put all command calls inside backticks and 
include the + sign

Bad:  Use help tag for info
Good: Use `+help tag` for info

Please place all user entered variables in single quotes

Bad:  Use `+tag create tagname content`
Good: Use `+tag create 'tagname' 'content'`

If you wish to use \" instead of ' in your messages, feel
free to, but keep it consistent

Please place all optional args inside square brackets

Bad: Use `+tag clone 'name' 'server' 'newname'

i will handle line seperation in code. so you will be 
shamed for double spacing if you do it yourself

Bad:  Info about **{0}**#{1}\n
Good: Info about **{0}**#{1}

Lists: If a field has `field = [""]` in it, feel free to make
that comma seperated list as long as you want.
"""

class Help:
    help_shorthelp = "Makes me tell you my **functions**"
    help_longhelp = ("Visit http://fennekid.github.io for more information\n" 
                    "`+help 'command name'` for information on a command\n" 
                    "`+help 'command group' for info on a group")
    """
    Available commands
    `+help ['query']`
    `+help ['command name']
    """

    #these are in +help at the top and bottom
    header = ("**All commands can be called with a `+` or a `!`**\n" 
             "**Anything in 'single quotes' is an arguement**\n" 
             "**Use `+help 'command'` or `+help 'group'` for information on a command**\n"
             "**More help can be found at <http://fennekid.github.io>**")
    
    footer = "If you have any questions, were all willing to help https://discord.gg/0ptu0m1G0a2KrjFq"
    
    #this is the default statement when no shorthelp is given.
    undefined = "No help was given for this command..."
    
    #this is when the user searches for a non existant command, eg +help foobar
    command_not_found = "That command doesn't exist..."
    
    #this is used when someone calls a command's longhelp
    # {0}     : Command name
    # {1}     : Command auth
    # {2}     : Command rate
    command_longhelp_header = "Help for `+{0}` {1} {2}"
    
    #in the bots section, tutorial and botban have brief command descriptions
    tutorial_description = "This makes me run through a brief introduction"
    botban_description = "This prevents users from using my functions"
    
class Categories:
    #These are the names of categories to be shown in +help
    #these are subject to change as development goes on
    Bot = "Commands relating to me"
    Stock = ""
    Tools = "Commands relating to Discord"
    Moderation = "Commands related to Moderating your server"
    RNG = "RNG related functions"
    Games = "Fun and useless commands"
    Memory = "Storage functions"
    Pokémon = ""
    Splatoon = ""
    Mabinogi = ""
    Secret = "Haha. You aren't gonna be able to see this."

    Information = "Tools for telling you things"
    Fun = "Commands just for fun :3"
    Nerd = "The best commands for the best people"

class Language:
    shorthelp = "Makes me change my **language**"
    
    #in language, longhelp is wierd. it will post this message
    """
    `+language en` makes me speak english
    `+language fr` fait parler en français moi
    ...
    """
    #so for this, I only want you to add your own line to the message
    #ie, the part _after_ the command call ("makes me speak english")
    longhelp = "makes me speak english"
    
    # {0}     : List of valid languages
    no_arguement = "You asked me to change the language here, but didn't tell me to what. Use `+language 'lang'`, valid langs are: {0}"
    invalid_arguement = "I couldn't understand the language you wanted. These are the valid languages {0}"
    
    successful_channel_change = "I have changed this channel's language to English."
    successful_server_change = "I have changed this server's default language to English."
    
class Reload:
    shorthelp = "makes me refresh my language file"
    longhelp = None

class Hello:
    shorthelp = "makes me say my **hello message**"
    longhelp = None
    message = "Hello! I am 42, a bot built by squaswin. I am in my 5th iteration. If you spot any mistakes, let squas know at the Kiwi Hangout. (Invite in `+about`. I would post the invite here, but there are some narcicistic servers out there who dont allow invites because of \"advertsement\"..."
    
class Check:
    shorthelp = "makes me tell you what **bot-permissions** you have"
    longhelp = None
    #these descriptions show up in the command
    owner = "squaswin himself"              #squas himself only
    buds = "squas' close friends"          #squas' close friends
    pm = "inside private channel"          #in PM only
    no_pm = "inside server"                #in Server only
    server_owner = "owner of server"       #owner of server
    server_admin = "members with Manage Roles"
    server_manager = "members with Manage Server"
    server_mod = "members with Manage Messages"
    ban = "members with Ban Members"
    kick = "members with Kick Members"
    bot_admin = "members with the 'Best Friends' role"
    bot_mod = "members with the 'Friends' role"
    old_user = "on server for 15 minutes"  #on server for 15 minutes
    bot_banned = "unable to use my commands"
    shitposter = None
    
class Basket:
    shorthelp = "posts **squids**"
    #longhelp credits frawst and toby for basket
    longhelp = "Basket made by **Frawst** and **Lord Toby**"
    #this command returns a link and nothing else
    
class Youtube:
    shorthelp = "makes me **search YouTube**"
    longhelp = ("`+youtube 'query'`\n"
                "(squas will not be held accountable for responses)")
    """
    Available commands:
    `+youtube 'query`
    """
    
    # {0}     : command name: "youtube" or "ytr"
    no_query_given = "You asked me to search YouTube but didn't tell me what to search for. Use `+{0} 'query'`"
    
    connection_error = "My connection to YouTube is unstable and I cannot fetch videos. Please try again later."
    no_video_found = "Your search returned no results"
    returned_an_advert = "Google decided to feed me an advert here, so to avoid spam, I'm not gonna post it."
    #this has a 20% chance of being returned
    returned_an_advert_snark = "Google fed me an ad here, but instead of showing you it, I'ma just beg for donations :3"
    
class Ytr:
    shorthelp = "makes me post a **YouTube Repeat** link"
    longhelp = "`+ytr 'query'`"
    """
    Available commands:
    `+ytr 'query'`
    """
    #this command uses responses from Youtube
    
class Hug:
    #no help needed
    shorthelp = ""
    longhelp = None
    action = "\*hug*"
    
class Lenny:
    #no help needed
    shorthelp = ""
    longhelp = None
    
class Echo:
    shorthelp = "makes me repeat a message"
    longhelp = None
    
class Join:
    shorthelp = "makes me link my **invite page**"
    longhelp = None
    
    # {0}     : oauth2 url invote
    message_fluff = "Want me? Have me! {0}"
    
class Leave:
    shorthelp = "makes me **leave** your server"
    longhelp = ""
    #the caller must say "confirm" to finalise this command
    ask_for_confirmation = "if I leave, I will not be able to return until an admin re-invites me. If you want to continue, type `confirm`"
    goodbye_message = "Ok then. I guess I'll be on my way then. Maybe we'll meet again. Goodbye."
    
class Cheeky:
    shorthelp = "cheeekky..."
    longhelp = None
    
class Game:
    shorthelp = "game over."
    longhelp = None
    
class Meme:
    shorthelp = "Ievan Polka best meme."
    longhelp = None
    
class Kill:
    shorthelp = "Makes me kill a user."
    longhelp = ""
    
    #when a user tried `+kill @squaswin` or `+kill @42`
    rejected_message = "I think I'll pass."
    
    #when a user tried `+kill @everyone`
    # {0}     : Caller name
    kill_caller = " * Fires laser at {0} for trying to ping @\u200beveryone"
    
    #the bot asks for "abort" to stop the command
    chargin_ma_laser = " * Charging laser. Use `abort` to stop the laser"
    firin_ma_laser = " * Firing laser cannon."
    stoppin_ma_laser = " * Laser cannon stopping."
    
    #when someone kills a mention, the bot PM's them
    pm_users = "\*BANG\* you're dead :3c"
    
class Kiwi:
    shorthelp = "best webcomic"
    longhelp = None
    
class Sync:
    shorthelp = "makes me start a **countdown** in chat"
    longhelp = "`+sync ['start']`"
    """
    Available commands:
    `+sync ['start']`
    """
    
class Remind:
    shorthelp = "makes me **remind you** about something"
    longhelp = ("`+remind 'seconds' ['message']\n"
                "`+remind 'hh:mm:ss' ['message']")
    """
    Available commands:
    `+remind 'seconds' ['message']`
    `+remind 'hh:mm:ss' ['message']`
    """
    
    no_arguement = "You asked me to start a timer, but didn't tell me how long to wait. Use `+help remind` for details."
    invalid_time = "I could not understand the time you gave me. Please use `'seconds'` or `hh:mm:ss`"
    
    # {0}      : Mention to username
    # {1}      : Reminder message
    no_reminder = "{0}, you asked me to remind you about something..."
    with_reminder = "{0}, you asked me to remind you to {1}"
    
    cancel_reminder = "Stopping reminder."
    
    #this asks for "`+cancel`"
    # {0}      : The hours
    # {1:0>2}  : The minutes
    # {2:0>2}  : The seconds
    reminder_start = "I will notify you in {0}:{1:0>2}:{2:0>2}"

class Faq:
    shorthelp = "makes me answer some of your **questions**"
    longhelp = None
    message = """
**Who are you? Why are you on this server?**
Hello! I'm **42**. If I'm on your server, it means someone with the `Manage Server` permission added me. Don't worry, though; I won't cause any trouble. _You can use `+help` to see what I can do._

**Why do you exist?**
I started as a pet project by **squaswin** to help with his coding skills, but eventually I grew into a robust and feature-full bot.

**I don't like you/want you here. How do I make you leave?**
If you are the owner of the server or have `Manage Roles`, you can use `+leave` to send me on my way.

**What do I do if people are making you do bad things?**
You can use the `+botban` command to make me ignore a user.

**B-but... isn't it mean to make you ignore them?**
Not at all! When you botban someone, it only applies to your server, so they can still talk to me elsewhere!

**I created a tag but can't recall it. Why?**
I am designed to keep each server's tags independent of each other, for two main reasons. If you create an NSFW tag, there is no risk of it being called in a SFW server. It also frees up names, so your server can have a `+tag welcome` and so can mine. _You can solve this with both `+tag clone` and `+tag import/export`._

**Me and my friends need you. How can I get you onto my server?**
If you do `+join`, I will be able to hop on your server. Keep in mind that you must have the `Manage Server` permission!

**Why do you have a `+hug` command?**
Because everyone needs a hug sometimes :3 _\*hug\*_

**I have a question, suggestion or bug report.**
Please come on over to Kiwi Hangout <https://discord.gg/0ptu0m1G0a2KrjFq> and let squas know!"""

class Changes:
    shorthelp = "makes me tell you my most **recent changes**"
    longhelp = "This command is only available in english."
    
class Marie:
    shorthelp = "best squid"
    longhelp = None

class Frawst:
    shorthelp = ""
    longhelp = None
    
class Puffu:
    shorthelp = ""
    longhelp = None
    
class Me:
    shorthelp = "a Skype-like replacement for Discord's **/me** command"
    longhelp = None
    # {0}     : The users action
    formatter = " * {0}"
    
    #This runs on 0.1% chance
    jerry = " * Jerry came, too."
    
class Archive:
    shorthelp = "makes me **store** the most **recent messages** in this channel"
    longhelp = "`+archive ['limit']`"
    """
    Available commands:
    `+archive ['limit']`
    """
    logsfrom_error = "I need Read Message History to fetch the logs..."
    
    # {0}     : The message object
    # {0.timestamp}
    # {0.channel.name}
    # {0.author.name}
    # {0.content}
    formatter = "{0.timestamp} {0.author.name}: {0.content}"
    
class Mentions:
    shorthelp = "makes me send you a **PM** with your **mentions** in."
    longhelp = None
    logsfrom_error = "I need Read Message History to fetch the logs..."
    pm_start_message = "PMing you mentions now..."
    
    # {0}     : The message object
    # {0.timestamp}
    # {0.author.name}
    # {0.content}
    formatter = "At {0.timestamp}, {0.author.name} said {0.content}"
    
    scanning_complete = "Scanning complete."
    
class Currency:
    shorthelp = "makes me **convert** between different **currencies**"
    longhelp = ("`+currency 'value' 'FROM' ['TO']` makes me convert currencies"
                "`+currency list` makes me post the list of accepted currencies"
                "Regardless of if `TO` is supplied, I will send `GBP`, `EUR`, `USD` and `JPY`")
    """
    Available commands:
    `+currency 'value' 'FROM' ['TO']`
    `+currency list`
    """
    no_arguements = "You asked me to convert but didn't tell me what to. Use `+currency 'value' 'FROM' ['TO']`"
    invalid_value = "I couldn't understand the value you gave me..."
    # {0}     : the error message
    error_message = "An error occured while I was fetching the results: {0}"
    
    #- XL Code Block ---------------------------
    # All non stated words **must** be lowercase
    # {0:.2f} : The input value
    # {1}     : The input currency
    header = "converting {0:.2f} from {1}"
    # {0}     : The output currency
    # {1:,.4f}: The output values
    output = "to {0}: {1:,.4f}"
    #-------------------------------------------
    
class Define:
    shorthelp = "Makes me **define** a word for you"
    longhelp = "`+define 'query'`"
    """
    Available commands:
    `+define 'query'`
    """
    no_results = "Your search returned no results. Please check your spelling and bare in mind that I do not search UrbanDictionary"
    #this happens on a 20% chance
    # {0}     : The initial query (optional)
    no_results_snark = [
        "http://lmgtfy.com/?q=define%20{0}",
        "error 404: Fucks not found.",
        "lmao that spelling.",
        "there is Google. off you trot."
    ]
    
    # {0}     : The initial query
    definition_header = "Definition for **{0}**"
    
class Napstablook:
    shorthelp = "best OTP"
    longhelp = None
    shyness = "w-what?! w-what are you implying?"
    
class Changeavy:
    shorthelp = "makes me change my avatar"
    longhelp = "The responses to this command are only in English"
    
class Fuck:
    shorthelp = "yeah. . . no."
    longhelp = None
    message = "hehe~. See you tonight then~"
    
class Slap:
    shorthelp = "because we've all wanted to"
    longhelp = None
    # {0}     : The target
    action = "\\*slaps {0}\\*"
    
class Now:
    shorthelp = "makes me tell you the current time"
    longhelp = None
    footer = "If the times are out, thats because I don't care about daylight savings."
    
class Ty:
    shorthelp = ""
    longhelp = None
    message = "np"
    
class Tutorial:
    shorthelp = "makes me teach you about my basic functionality."
    longhelp = "Intended for people who have never seen me before"
    #The bot listens to ++help from here onwards
    header = "Hello new user. Thank you for inviting me to your server. Over the next few minutes, I will teach you a lot of my functions. Use `++next` to move to the next message in the script or just wait a couple minutes and I'll stop talking myself."
    #this is a long one. You can have up to 10 parts here
    message_trail = [
        "Hello, I am 42, a robot built by squaswin. If you cannot understand me, use `+language` to change how I will speak or if you want me to leave, you can use `+leave`.",
        "I am a Moderation bot. I can do a whole bunch of cool things, like `+ban` or `+kick` people, `+remove` messages from chat or `+colour` roles to something that isn't a Discord default.",
        "I am an Information bot. I can tell you a lot of `+info` about yourself or the server, I can find someone's `+avy` and I can `+welcome` new users if you want.",
        "I am a Helper bot. I can `+tag` messages or image links so you can easily find them and I can keep a `+profile` so that other users can find you elsewehre on the internet.",
        "I am a Fun bot. I can emulate skypes `+me` command, or I can post `+lenny`s. I am a `+slots` machine and a `+blackjack` dealer. And for those who need it, I can `+hug` them too.",
        "I am a Smart bot. Some of my commands are limited to certain users and you can `+check` your permissions at any time. You can see what you can do when you ask for `+help`.",
        "I am a Cruel bot. You can `+toggle` commands to stop people from using them or `+botban` users who are making a mess of the chat.",
        "I am a Clean bot. I wont permanently store information about your server and you can make me `+cleanup` my own messages.",
        "I am a Helpful bot. You can always ask for `+help` on my commands or visit <http://fennekid.github.io> for more details, and you can always see the `+faq`",
        "I am _not_ an Original bot... Well, this version of me is, but I was based off of a character with the same name in a webcomic called Kiwi Blitz. <http://www.kiwiblitz.com/comic/welcome-to-kb>"
    ]
    #this should link https://discord.gg/0ptu0m1G0a2KrjFq
    #and also http://fennekid.github.io
    footer = "This ends my tutorial, hopefully I have answered some of your questions, if not, feel free to ask at the Kiwi Hangout https://discord.gg/0ptu0m1G0a2KrjFq <http://fennekid.github.io>"
    
class Lmgtfy:
    shorthelp = "lets me Google that for you"
    longhelp = None
    no_arguements = "http://lmgtfy.com/?q=how+to+pass+arguements+into+commands"
    
class H5:
    shorthelp = ""
    longhelp = None
    message = "High Five| :hand::skin-tone-1:"
    
class Ie:
    shorthelp = ""
    longhelp = None
    
class Discrim:
    shorthelp = "makes me find users with the **same discriminator**"
    longhelp = "`+discrim ['0000']` (requires all 4 numbers)"
    """
    Available commands:
    `+discrim ['0000']
    """
    # {0}     : The discrim
    found_match = "Matching users over all servers with #{0}:"
    no_match = "I couldnt find anyone."
    
class Gold:
    shorthelp = "But its a dead meme."
    longhelp = None
    # -XL Code Block ----------------------
    # only use uppercase for the words "Discord Gold"
    message = "Discord Gold is required to view this message"
    # -------------------------------------
    
class Rip:
    shorthelp = "something something wrong bot"
    longhelp = None
    rip_35 = "Yes you are, you nerd."
    
class Botban:
    shorthelp = "makes me **ignore** any commands from **a user**"
    longhelp = "`+botban 'member'`"
    """
    `Available commands:
    `+botban 'member'`
    """
    no_arguement = "You asked me to bot-ban a user, but didn't tell me who. Use `+botban 'member'`"
    no_member_found = "I couldn't find that person to bot-ban. Remember that names are case sensitive."
    too_many_members = "I can only bot-ban 1 member at a time."
    cannot_ban_server_owner = "The server owner can't be bot-banned, so there is no point trying."
    cannot_ban_squas = "What is the point in trying to ban squas when he can always use all my commands?"
    #runs on 2% chance
    cannot_ban_squas_snark = "DON'T YOU HURT MY SQUAS!!"
    
    command_success = "I have bot-banned that user. They will no longer be able to use my commands."
    #this message should let the target know where they were
    #botbanned and warn them that 3 bans = bad time.
    # {0}     : Server name
    # {1}     : Number of bans
    pm_to_target = "You have been bot-banned on {0}. You are on {1} bot-ban(s). If you reach 3 botbans, you will not be able to use my commands anywhere."
    pm_on_globalban = "You have been bot-banned on {0}. You are on {1} bot-bans and will not be allowed to use my commands anywhere."
    
class Botunban:
    shorthelp = "makes me **remove a botban** on a user"
    longhelp = "`+botunban 'member'`"
    """
    Available commands:
    `+botunban 'member'`
    """
    no_arguement = "You asked me to bot-unban someone, but didn't tell me who. Use `+botunban 'member'`"
    no_member_found = "I couldn't find the member you asked me to unban. Remember that names are case sensitive."
    too_many_members = "I can only bot-unban 1 member at a time."
    target_not_banned = "That member is not bot-banned though..."
    command_success = "I have unbanned that member."
    # {0}     : Server name
    # {1}     : Number of bans
    pm_to_target = "You have been bot-unbanned from {0}. You still have {1} bot-ban(s) to your name."
    
    
class Globalban:
    shorthelp = "makes me **botban a robot** over _all_ servers"
    longhelp = "`+globalban 'member'`"
    """
    Available commands:
    `+globalban 'member'`
    """
    no_arguements = "You asked me to globalban someone, but didn't tell me who. Use `+globalban 'member'`"
    no_member_found = "I couldn't find that user. Remember that names are case sensitive."
    success = "I have banned this robot on all servers."
    
class Kick:
    shorthelp = "makes me **kick** a user"
    longhelp = "`+kick 'member'`"
    """
    Available commands:
    `+kick 'member'`
    """
    no_arguements = "You asked me to kick someone, but didn't tell me who. Use `+kick 'member'`"
    no_member_found = "I could not find the member you wanted to kick..."
    too_many_members = "I can only kick 1 member at a time."
    command_success = "Goodbye."
    no_permission = "I require the Kick Members permission to use this command"
    
# lolrip @ctrl+c ctrl+v
    
class Ban:
    shorthelp = "makes me **ban** a user"
    longhelp = "`+ban 'member'`"
    """
    Available commands:
    `+ban 'member'`
    """
    no_arguements = "You asked me to ban someone, but didn't tell me who. Use `+ban 'member'`"
    no_member_found = "I could not find the member you wanted to ban..."
    too_many_members = "I can only ban 1 member at a time."
    command_success = "Goodbye forever."
    no_permission = "I require the Ban Members permission to use this command"

class Softban:
    shorthelp = "makes me **kick** a user and delete their messages"
    longhelp = "`+softban 'member'`"
    """
    Available commands:
    `+softban 'member'`
    """
    no_arguements = "You asked me to softban someone, but didn't tell me who. Use `+softban 'member'`"
    no_member_found = "I could not find the member you wanted to softban..."
    too_many_members = "I can only softban 1 member at a time."
    command_success = "Please leave chat alone."
    no_permission = "I require the Ban Members permission to use this command"

class Giveme:
    shorthelp = "manages my **role distribution** system"
    longhelp = ("`+giveme 'name'` assigns (or replaces) a role\n"
                "`+giveme list` lists the givemes on the server\n"
                " -- Server Admin --\n"
                "`+giveme set 'name' 'role'` adds a new giveme to assign a role\n"
                "`+giveme clear 'name'` removes a giveme\n"
                "`+giveme exclusive` toggles mutual exclusive mode (useful for colours)")
    """
    Available commands:
    -- user
    `+giveme 'name'`
    `+giveme list`
    -- server admin
    `+giveme set 'name' 'role'`
    `+giveme clear 'name'`
    `+giveme exclusive
    """
    
    no_arguement = "You asked about my role distribution system, but didn't tell me what to do. Use `+help giveme`"
    
    # giveme list
    list_no_givemes = "This server has no givemes set up..."
    # {0}     : Server name
    # {1}     : , seperated list
    list_message = "Givemes for {0}:\n{1}"
    
    #giveme set
    set_not_enough_args = "You asked me to create a giveme, but didn't tell me what to do. Use `+giveme set 'name' 'role'`"
    set_reserved_name = "I cannot create a giveme with that name as it is reserved."
    set_role_not_found = "I cannot find the role you want me to assign..."
    # {0}     : Giveme name
    # {1}     : Role name
    set_success = "I have set `+giveme {0}` to assign {1}"
    
    #giveme clear
    clear_not_enough_args = "You asked me to remove a giveme, but didn't tell me which. Use `+giveme clear 'name'`"
    clear_no_server_givemes = "This server has no givemes on it."
    clear_nonexistant_name = "There is not a giveme with that name."
    clear_success = "I have removed that giveme."
    
    #giveme exclusive
    exclusive_enabled = "I have enabled mutually exclusive givemes on this server."
    exclusive_disabled = "I have disabled mutually exclusive givemes on this server."
    
    #giveme get
    get_private_channel_error = "This command cannot be used in PM."
    get_giveme_not_found = "There is not a giveme setup with that name."
    #if a role is renamed or deleted, 42 can't find it
    get_role_finding_error = "The role that this giveme assigns has been renamed or deleted..."
    get_no_permissions = "I require the Manage Role permission to use this command."
    # {0}     : The giveme name
    get_exclusive_success = "I have replaced your giveme with {0}"
    get_normal_success = "I have given you {0}"
    
class Blacklist:
    shorthelp = "this controls my **automoderation** function.\n"
    longhelp = ("`+blacklist add 'term'` makes me add a word to the filter\n"
                "`+blacklist remove` makes me remove a word from the filter\n"
                "`+blacklist list` makes me list the words on the filter\n"
                "`+blacklist clear` makes me wipe the filter clean")
    """
    Available commands:
    `+blacklist add 'term'`
    `+blacklist remove`
    `+blacklist list`
    `+blacklist clear`
    """
    # {0}     : The name of the user
    message_deleted_alert = "[REMOVED] from {0}. Please refer to the moderators and the `+blacklist` for more information."
    no_permissions = "I would delete this message because of the `+blacklist`, but I require Manage Messages."
    no_arguement = "You asked me about the blacklist, but didn't tell me what you wanted to do. Use `+help blacklist`"
    no_blacklisted_words = "All is good here. I wont delete any messages."
    
    #blacklist add
    add_not_enough_args = "You asked me to add something to the filter, but didn't tell me what. Use `+blacklist add 'term'`"
    add_query_too_short = "I don't want to hit too many messages, so I ask that all terms are at least 4 letters."
    # {0}     : Added query
    add_success = "I have added `{0}` to the blacklist"
    
    #blacklist remove (interractive)
    #lits to send is generated. bot asks for the _number_ of an entry
    remove_request_footer = "Please enter the number of the term to delete."
    remove_request_timeout = "Blacklist remove request timed out."
    remove_success = "I have removed that term from the blacklist"
    
    #blacklist clear
    #bot listens for "confirm"
    clear_question = "You want me to clear the entire filter. Please say `confirm` to finalise."
    clear_timeout = "Blacklist clear request timed out."
    clear_success = "I have cleared the filters for this server. ~~You may now shitpost to your hearts content~~"
    
    #blacklist list
    list_header = "Filtered terms for this server."
    
class Brainfuck:
    shorthelp = "makes me **evaluate brainfuck** statements"
    longhelp = ("`+brainfuck 'script' ['input']\n"
                "`+brainfuck ref` posts a reference sheet")
    """
    Available commands:
    +brainfuck 'script' ['input']
    +brainfuck ref
    """
    reference_sheet = """```brainfuck
>  increments pointer
<  decrements pointer
+  increments value
-  decrements value
[  jump if 0 to ]
]  jump to [
.  print char to output
,  read char from input
```"""
    error_no_instruction = "Error - No Instructions"
    error_out_of_range = "Error - Tape Index Out Of Range"     #range from 0 - 255
    error_output_len = "Error - Output Message Too Long"       #range from 0 - 1500
    error_invalid_char = "Error - Invalid Input"               #non ascii input
    error_mismatched_loops = "Error - Mismatched Loops"
    error_max_cycles = "Error - Maximum Loop Cycles Reached"   #range from 0 - 65535
    # {0}     : The output message
    # {1}     : The step counter
    # {2}     : The character counter
    output = "I interpreted that command and returned: `{0}` (in {1} steps and {2} characters)"
    
class Shell:
    shorthelp = "makes me open a **REPL Shell** in chat."
    longhelp = "This command is only available in english."
    
class Event:
    shorthelp = "lets you access my **calendar** functions"
    longhelp = ("`+event next` gets the next event(s)\n"
                "`+event list` lists all events\n"
                " -- Bot Mod --\n"
                "`+event add 'date' 'message'` adds an event to that day\n"
                "`+event set 'date' 'message'` replaces all events that day\n"
                "`+event delete 'date'` removes an event from that day\n"
                "`+event clear 'date'` removes all events that day\n"
                "`+event wipe` deletes the entire calendar")
    """
    Available Commands
    -- user
    `+event next`
    `+event list`
    -- bot mod
    `+event set 'date' 'message'`
    `+event add 'date' 'message'`
    `+event delete 'date'`
    `+event clear 'date'`
    `+event wipe`
    """
    no_arguement = "You asked about my calendar, but didn't tell me what to do. Use `+help event`"
    invalid_arguement = "You asked about my calendar, but I couldn't understand what you wanted. Use `+help event`"
    no_permission = "Only Bot Mods can modify the calendar"
    no_events = "There are no events on this server"
    months = [None, #ignore this please
        "JAN", "FEB", "MAR", "APR", "MAY", "JUN",
        "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"
    ]
    # error messages
    error_invalid_format = "I could not understand the date format. Please pass date as one of DD/MM, DD/MMM, MM/DD or MMM/DD."   #DD/MM, DD/MMM, MM/DD, MMM/DD
    # {0}     : Month name
    # {1}     : Days in that month
    error_date_invalid = "For the month {0}, the day must be between 1 - {1}"
    error_date_not_a_number = "One of the elements pass into date was not a number"
    error_invalid_date = "That date is invalid."
    date_read_error = "An error occured: " # + error message
    date_discrepency_header = "I couldn't determine whidh date you meant."
    #this asks for a number of the date to choose
    date_discrepency_footer = "Please enter the number for the date to use."
    date_discrepency_timeout = "Date request timed out."
    
    #event next
    # {0}     : The number of days
    next_event_message = "The next event(s) in {0} day(s) are:"
    
    #event add
    add_not_enouth_args = "You asked me to add an event, but didn't give me enough information. Use `+event add 'date' 'message'`"
    add_success = "I have added that event to the calendar."
    
    #event set
    set_not_enough_args = "You asked me to change an event, but didn't give me enough information. Use `+event set 'date' 'message'`"
    set_success = "I have set that days event."
    
    #event delete
    delete_not_enough_args = "You asked me to delete an event, but didn't tell me what day. Use `+evente delete 'date'`"
    delete_no_events_on_day = "There are no events on that day."
    #this command asks for the number of an event
    delete_event_list_header = "Events for that day."
    delete_event_list_footer = "Please enter the number of the event to delete."
    delete_request_timeout = "Event delete request timed out..."
    delete_success = "I have removed that event"
    
    #event clear
    clear_not_enough_args = "You asked me to clear a date, but didn't tell me what date. Use `+event clear 'date'`"
    clear_no_events_on_day = "There are no events on that day."
    clear_success = "I have cleared that day."
    
    #event wipe
    #this command asks for "continue"
    wipe_request = "You are about to delete the entire calendar. If you are sure about this, type `continue`"
    wipe_request_timeout = "Event wipe request timed out..."
    wipe_success = "I have wiped the server calendar."
    
class Poll:
    shorthelp = "lets me **host a poll** in chat"
    longhelp = ("`+poll start 'question' 'a1' 'a2' [...]` makes me start a poll\n"
                "`+poll results` makes me post the results to the poll\n"
                "`+poll close` stops the current poll and posts the final results")
    """
    Available commands:
    `+poll start 'question' 'answer' 'answer' [...]`
    `+poll results`
    `+poll close`
    """
    no_arguements = "You asked me about polling, but didn't tell me what you wanted. Use `+help poll`"
    invalid_arguements = "You asked me about polling but I couldn't understand what you wanted. Use `+help poll`"
    
    #poll start
    start_poll_already_exists = "I can only keep track of one poll at a time. Use `+vote` to see what poll is active."
    start_not_enough_args = "You asked me to make a poll, but didn't give me enough info. I need at least 2 answers. `+poll start 'question' 'a1' 'a2' [...]`" #req 5 args
    start_success = "I have opened up this poll. Use `+vote` to vote."
    
    no_open_poll = "There is no open poll on this server..."
    no_votes = "Nobody voted on your poll."
    #poll close
    close_success = "I have closed this poll."
    
    #poll results
    results_footer = "Use `+vote` to add your vote to the list."
    
class Vote:
    shorthelp = "lets you **vote** on the current open poll"
    longhelp = ("`+vote` lets you see the options\n"
                "`+vote 'number'` lets you vote for your option")
    """
    Available commands:
    `+vote`
    `+vote 'number'`
    """
    no_open_poll = "There is no open poll on this server."
    invalid_vote_number = "I couldn't understand who you voted for. Use `+vote` to see the options"
    # {0}     : Option name
    vote_success = "I have set your vote to {0}"
    
class Colour:
    shorthelp = "lets me fill discord with **wonderful colourful goodness**."
    longhelp = ("`+colour 'role' '0xRRGGBB'` makes me change a role colour\n"
                "`+colour 'username' '0xRRGGBB'` makes me create a colour role for someone\n"
                "`+colour get ['role|username']` makes me post a colour code (or list of codes)\n"
                "The `+colour 'username'` option generates a new ColourID role with the same permissions as the server default role.")
    """
    Available commands:
    `+colour 'role' '0xRRGGBB'`
    `+colour 'name' '0xRRGGBB'`
    `+colour get ['role|name']`
    """
    no_arguements = "You asked about my colour function, but didn't tell me what to do. Use `+help colour`"
    no_permissions = "I need the Manage Roles permission to use this command."
    
    #colour get
    get_invalid_name = "I could not find that role or user. Remember that names are case sensitive."
    get_no_custom_colour = "That user does not have a custom ColourID role."
    # {0}     : User or Role name
    # {1}     : The colour of the role
    get_return_role = "The colour of {0} is `{1}`"
    #this may be removed and replaced with a file upload later on.
    get_message_too_long = "The list of roles here is too long for 1 message. Maybe try searching for a specofoc colour."
    
    #colour set
    set_not_enough_args = "You asked me to change someone's colour, but didn't tell me to what. Use `+colour 'role|username' '0xRRGGBB'`"
    set_no_role_or_user = "I could not find the role or member to re-colour. Remember that names are case sensitive."
    set_invalid_colour = "The colour you gave me is invalid. Please give me a 6 digit hex number. (e.g. `0xFF00FF` for magenta."
    set_success = "I've changed your colour! Try it out! ^-^"
    
class Rps:
    shorthelp = "Makes me start a game of **Rock Paper Scissors**"
    longhelp = "`+rps ['player']`"
    """
    Available commands:
    `+rps ['player']`
    """
    #bot waits for "rock" "paper" or "scissors"
    send_get_request = "Please enter `rock`, `paper` or `sscissors`"
    send_get_response = "Got response"
    
    # {0}     : player1 name (throws outside object)
    # {1}     : player2 name (throws inside object)
    results_cases = {
        "rock": {
            "rock": "Both players threw Rock and drew.", # draw
            "paper": "{1} threw paper and beat {0}.", # {1} wins
            "scissors": "{0} threw scissors and beat {1}." # {0} wins
        },
        "paper": {
            "rock": "{0} threw rock and beat {1}.", # {0} wins
            "paper": "Both players threw Paper and drew.", # draw
            "scissors": "{1} threw scissors and beat {0}." # {1} wins
        },
        "scissors": {
            "rock": "{1} threw rock and beat {0}.", # {1} wins
            "paper": "{0} threw paper and beat {1}.", # {0} wins
            "scissors": "Both players threw Scissors and drew." # draw
        }
    }
    # bot waits for "+accept"
    accept_from_target = "Use `+accept` to accept the challenge."
    accept_from_anyone = "Use `+accept`. Since I couldn't locate the opponent, anyone can accept."
    rps_timeout = "RPS request timed out."
    
class Evict:
    shorthelp = "removes a user's **access to the casino** for an hour"
    longhelp = "`+evict 'member'`"
    """
    Available commands:
    `+evict 'name'`
    """
    no_arguements = "Who am I evicting from the casino? Use `+evict 'member'`"
    no_target_found = "I could not find a user with that name..."
    #Evicts now last an hour and is global
    target_evicted = "I have evicted that member. They will not be able to use any casino commands for an hour."
    
class Blackjack:
    shorthelp = "an interactive in-Discord game of blackjack against house"
    longhelp = "`+blackjack 'wager'`"
    """
    Available commands:
    `+blackjack 'wager'`
    """
    no_arguements = "How much did you want to wager? Use `+blackjack 'wager'`"
    not_enough_coins = "You do not have enough coins to play."
    coin_cap_hit = "There is a betting limit of 150 coins" #cap is 150
    # `{0}`   : The player hand
    # {1}     : The coins won
    player_got_21 = "You got a blackjack with `{0}` and won {1}."
    
    #this requets `+hit` or `+stand`
    # {0}     : The dealer's card
    # `{1}`   : The player hand
    # {2}     : The player hand total
    player_turn = "The dealer's hand is `{0}`, `--`. Your hand is `{1}` = {2}.\n`+hit` or `+stand`?"
    
    # `[0}`   : The player hand
    # {1}     : The player hand total
    player_bust = "You drew `{0}` = {1} and went bust."
    
    # {0}     : The winnings
    player_5_card_hand = "You drew 5 cards without going bust and won {0}."
    
    # `{dh}`  : Dealer hand
    # {dt}    : Dealer total
    # `{ph}`  : Player hand
    # {pt}    : Player total
    # {win}   : winnings
    dealer_bust = "You drew `{ph}` = {pt}. The dealer drew `{dh}` = {dt} and went bust. You win {win}."
    dealer_win = "You drew `{ph}` = {pt}, but the dealer drew `{dh}` = {dt} and beat you."
    player_win = "The dealer drew `{dh}` = {dt}, but you won with `{ph}` = {pt} and won {win}."

class Coins:
    shorthelp = "lets me manage your coins"
    longhelp = ("`+coins [get ['username']]` gets yours or another users coin count\n"
                "`+coins give 'amount' 'username'` gives coins to another user\n"
                "`+coins add` lets you collect 300 coins every 24 hours")
    """
    Available commands:
    `+coins [get ['name']]`
    `+coins give 'amount' 'user'`
    `+coins add`
    """
    #coins get
    get_target_not_found = "I couldn't find a member with that name..."
    vectors = [None, "hands",
        "pocket", "purse", "bag"
        "safe", "bank", "private yatch",
        "private island off the Phillipines", "private space station"
    ]
    get_add_ready_now = "They can use `+coins add` to get 300 coins."
    # {0:0>2}  : The hours
    # {1:0>2}  : The minutes
    get_add_ready_in = "They can collect 300 coins in {0:0>2}:{1:0>2}."
    
    #coins add
    add_success = "I have given you 300 coins."
    add_cooldown = "You cannot recieve coins right now. Use `+coins get` to see how long you have to wait"
    
    #coins gove
    give_no_args = "Who am I giving coins to? Use `+coins give 'value' 'member'`"
    give_target_not_found = "I could not find a member with that name."
    give_coins_read_error = "I couldn't understand the coins value you gave me."
    give_theft_response = "You are not allowed to steal coins from other users"
    give_not_enough_coins = "You do not have that many coins to give away"
    give_success = "I have successfully transferred those coins"
    
class Slots:
    shorthelp = "a working in-Discord 3 wheel slot machine"
    longhelp = ("`+slots [1|2]`\n"
                "```fix\n"
                "        Bet   1    2\n"
                "$$$ $$$ $$$  200 1000\n"
                "$ $ $ $ $ $   50  150\n"
                " $   $   $    10   20\n"
                "ANY ANY ANY    5   10\n"
                "--- --- ---    1    2\n"
                "```")
    """
    Available commands:
    `+slots [1|2]
    
    Paytable goes in longhelp
    
            Bet   1    2
    $$$ $$$ $$$  200 1000
    $ $ $ $ $ $   50  150
     $   $   $    10   20
    ANY ANY ANY    5   10
    --- --- ---    1    2
    """
    too_many_coins = "This machine only accepts 1 or 2 coins." #machine only accepts 1 or 2
    not_enough_coins = "You do not have enough coins to use this machine."
    # {0}     : winnings
    payout_message = "You won {0} coins."
    
class Spyke:
    shorthelp = "A Forge brand slot machine"
    longhelp = ("```fix\n"
                "        BET    30\n"
                "ISS ISS ISS  20000\n"
                "ISS ISS ANY   4500\n"
                "ISS ANY ANY    180\n"
                "SDU SDU SDU    250\n"
                "MATCH 2 ANY    100\n"
                "```")
    """
    Paytable goes in longhelp
    ------------|---30--|
    ISS ISS ISS | 20000 |
    ISS ISS ANY |  4500 |
    ISS ANY ANY |   180 |
    ------------|-------|
    SDU SDU SDU |   250 |
    MATCH 2 ANY |   100 |
    """

class Fibbage:
    shorthelp = "a full game of Fibbage"
    longhelp = "Due to the nature of the questions, this game is only abailable in English"
    """
    This command is only available in english
    The messages will be hard coded. This is just
    here to make +help work.
    """
    
class Outburst:
    shorthelp = "a full game of Outburst"
    longhelp = "Due to the nature of the questions, this game is only abailable in English"
    """
    This is the same as fibbage.
    """
    
class Gear:
    shorthelp = "lets me search my Splatoon gear database"
    longhelp = ("`+gear brand 'name'` gets the affected abilities\n"
                "`+gear ability 'name'` gets the affecting brands\n"
                "`+gear brand list` `+gear ability list` lists brands/abilities\n"
                "`+gear search 'name` makes me find gear by name\n"
                "`+gear list 'ability'` `+gear brandlist 'brand'` lists all gear\n"
                "`+gear find 'abil1' 'abil2'` makes me find the best match for rerolling")
    """
    Available commands:
    `+gear brand 'brand'`
    `+gear brand list`
    `+gear ability 'ability'`
    `+gear ability list`
    `+gear search 'gear name'`
    `+gear list 'ability'`
    `+gear brandlist 'brand'`
    `+gear find 'ability1' 'ability2'`
    """
    no_arguement = "You asked about my gear database, but didn't tell me what you wanted. Use `+help gear` for details"
    unknown_arguement = "You asked about my gear database, but I couldn't understand what you wanted. Use `+help gear`"
    
    #gear brand
    brand_no_query = "You asked about brands but didn't tell me which one. Use `+gear brand 'brandname'`"
    brand_unknown = "I couldn't understand the brand. Use `+gear brand list`"
    # {name}  : The name of the brand
    # {buff}  : The buffed ability
    # {nerf}  : The nerfed ability
    brand_neutral = "The brand {name} is neutral"
    brand_non_neutral = "The brand {name} has a 5x chance rolling {buff} and a 0.5x chance rolling {nerf}"
    
    #gear ability
    ability_no_query = "You asked about abilities but didn't tell me which one. Use `+gear ability 'brandname'`"
    ability_unknown = "I couldn't understand the ability. Use `+gear ability list`"
    # {0}     : Name of ability
    # {1[buff]} : Buffed brand
    # {1[nerf]} : Nerfed brand
    ability_message = "The ability {0} has a 5x chance of being rolled on {1[buff]} and a 0.5x chance of being rolled on {1[nerf]}"
    
    #gear search
    search_no_query = "You asked me to look for gear, but didn't tell me what to search for. Use `+gear search 'query'`"
    search_query_too_short = "I will need a longer query to work with. Please try again but with more than 3 letters"
    # {0}     : Gear name
    # {1[pal]} : The gear data...
    # {1[ability][main]}
    # {1[type]} : (hat, clothes or shoes)
    # {1[brand]}
    search_formatter = "{0}: The {1[ability][main]}{1[type]} by {1[brand]}"
    search_formatter_pal = "{0} ({1[pal]}): The {1[ability][main]}{1[type]} by {1[brand]}"
    
    # {0}     : The query
    search_no_results = "Your query `{0}` returned no results..."
    
    # {0}     : The number of responses
    search_results_header = "Found {0} matching pieces of gear."
    
    #the bot waits for a number index
    search_results_footer = "Please enter the number of the gear for more details"
    
    # {0}     : The number of responses
    # {1}     : The query
    search_returned_too_much = "Your query `{1}` returned {0} responses. Maybe try refining it..."
    
    #gear list
    list_no_query = "You asked me to list gear, but didn't tell me what ability to look for. USe `+gear list 'ability'`"
    list_invalid_ability = "I could not understand that ability. USe `+gear ability list`"
    
    #gear brandlist
    brandlist_no_query = "You asked me to list gear, but didn't tell me what brand to look for. USe `+gear brandlist 'brand'`"
    brandlist_invalid_ability = "I could not understand that brand. USe `+gear brand list`"
    
    #gear find
    find_no_queries = "You asked me to look for gear, but didn't give me enough abilities. Use `+gear find 'abil1' 'abil2'`" #requires 2 args
    find_invalid_abilitys = "One or both of the abilities you gave me were ones I couldn't recognise. Use `+gear ability list`"
    find_both_abils_unique = "Both of the abilities you gave me were non-rollable, meaning I cannot find anything with both..."
    
    # {0}     : Slot (hat, clothes, shoes)
    # {1}     : Gearname
    find_got_match = "Found match for {0}!! Roll the {1} for a ~1/36 chance of a triple."
    find_got_neutral = "Found neutral gear for {0}. Roll the {1} for a ~1/2200 chance of a triple."
    find_got_nothing = "Could not find gear for {0}."
    
class Splatmeta:
    shorthelp = "makes me link to the Splatools App"
    longhelp = None
    """
    Available commands:
    `+splatmeta damage 'wpn' 'dmg' 'def'`
    `+splatmeta damage 'wpn' 'dmg' ?`
    `+splatmeta damage 'wpn' ? 'def'`
    [Oh god, do I have to do this now? Can it just wait?]
    #TODO do this
    right. this is not staying. the code is a fucking mess
    i have no way to make it any better without massive amounts
    of effort that i dont care enough to put in, so fuck it
    im just gonna make splatmeta link that splatools app. its
    better than splatmeta could ever be
    rip
    """
    explanation = ("Because this app is such a mess and a lot of what went into it I cant even "
                   "remember, I've decided to stop supporting this command and instead I am just "
                   "going to link to the Splatools app at <http://leanny.github.io/splatools.html>")
    
class Info:
    shorthelp = "makes me tell you a whole bunch of cool stats and info"
    longhelp = ("`+info [user ['username']]` gets info about yourself or another user\n"
                "`+info server` gets info about the server\n"
                "`+info 42` gets info about myself\n"
                "`+info world` gets a whole bunch of server awards\n")
    """
    Oh boy. this is gonna be fun to fill in
    Available commands:
    +info [user ['name']]
    +info server
    +info 42
    +info world
    """
    no_arguements = "You asked me about my info command, but I couldn't understand. You probably wanted `+info user 'username'` but you can use `+help info` for more."
    #info user
    user_no_args = "## This shouldnt show because `+i u` should default the user..."
    user_target_not_found = "I could not find the user that you wanted info on..."
    # {0}     : Name
    # {1}     : Discriminator
    user_name = "Information about **{0}**#{1}"
    # {0}     : ID
    user_id = " - Their ID is {0}"
    # {0}     : Created date
    user_created = " - They have been on discord since {1}."
    # {0}     : Role list
    user_roles = " - They have these roles: {0}"
    user_no_roles = " - They have no special roles."
    # {0:06X} : Colour
    user_colour = " - Their colour is {0:06X}"
    # {0}     : Colour name
    user_colour_is_default = " - They do not have any special colours."
    # {0}     : Server join date
    msg_days_ago = "{0} Days ago"
    msg_hours_ago = "{0} Hours ago"
    # {0}     : Server join date
    # {1}     : Server joined days ago
    user_joined = " - They joined the server on {0} ({1})"
    # {0}     : Joined score
    user_joined_score = " - They were number {0} on the server."
    # {0}     : Server member count
    # {1}     : Server name
    user_server_member_data = " - The {0} server has {1} members on it."
    
    #info user > Member
    # {0}     : Game
    member_game_playing = " - They are playing {0}."
    # {0}     : Tag count
    member_tag_count = " - They have {0} tags on this server."
    # {0}     : Time last seen
    member_last_seen = " - I last saw them at {0}."
    member_not_seen = " - I have not seen them recently."
    
    #info user > Bot
    bot_user_is_bot_header = " - This user is a [BOT]"
    bot_has_no_info = " - I have no information about this bot. If you know more, send squaswin details about the owner, help command and invite link as well as the ID of the bot."
    # {0}     : Owner name
    bot_owner = " - This bot is owned by {0}"
    # {0}     : Invoke char
    # {1}     : Help command
    bot_help = " - This bot's invoker is {0} and has help at {1}"
    # {0}     : Invite Link
    bot_invite = " - To get this bot: {0}"
    
    #info server
    # {0}     : Name
    server_name = "Information about **{0}**"
    # {0}     : ID
    server_id = " - This servers ID is {0}"
    # {0}     : Owner
    # {1}     : Creation date
    server_details = " - The server is owned by {0} and was made on {1}."
    # {0}     : Text channel count
    # {1}     : Voice channel count
    server_channels = " - There are {0} text channels and {1} voice channels."
    # {0}     : Most spammy user name
    server_spammiest_user = " - The most spammy user is {0}"
    # {0}     : Most spammy channel name
    server_spammiest_channel = " - The loudest channel is {0}"
    # {0}     : Members
    # {1}     : Online Members
    # {2}     : Idle Members
    server_members = " - This server has {0} members with {1} online and {2} idle."
    # {0.name} : Member name
    # {0.joined_at} : Member joined date
    server_newest_user = " - The newest user is {0.name} who joined at {0.joined_at}"
    # {0}     : Users in voice
    # {1}     : Users in game
    server_in_voice = " - There are {0} users in voice and {1} in game."
    # {0}     : Bot count
    server_bots = " - This server has {0} bots."
    
    #info server > 42
    # {0}     : 42 joined
    server_me_joined_at = " - I joined the server at {0}."
    server_me_welcome = " - This servers current welcome behaviour can be found on `+welcome info`"
    # {0}     : Tag count
    server_me_tag_count = " - This server has {0} tags on."
    
    #info 42
    self_name = "Information about **Myself**"
    # {0}     : ID
    self_id = " - My ID is {0}"
    # {0}     : Command count
    self_command_count = " - I have {0} commands."
    # {0}     : Hours
    # {1}     : Minutes
    # {2}     : Seconds
    self_uptime = " - I have been awake for {0} hours, {1} minutes and {2} seconds."
    # {0}     : Tag total
    self_tag_count = " - I have a total of {0} tags across all my servers"
    # {0}     : Command uses
    self_command_count = " - I have performed a total of {0} commands in my lifetime."
    # {0}     : Users over all servers
    # {1}     : Unique users
    self_user_count = " - I am in contact with {0} users ({1} uniqie) across all servers."
    # {0}     : Server count
    self_server_count = " - I am in {0} servers."
    # {text}  : Text channels
    # {voice} : Voice channels
    self_channel_count = " - I can see {text} text channels and {voice} voice channels."
    
    #info world
    # {0}     : The field name (keys)
    # {1}     : The server name
    # {2}     : The number
    # {2:.2f} : The number (non integer)
    world_stats = {#only edit this vv
        "popular"    : " - The server with the most members is {1} with {2} members.",
        "spacey"     : " - The server with the most channels is {1} with {2} text and voice channels.",
        "packed"     : " - The server with the most people in a text channel is {1} with {2:.2f} ppl/channel.",
        "empty"      : " - The server with the least people in a text channel is {1} with {2:.2f} ppl/channel.",
        "shitposting": " - The server with the most tags per user is {1} with {2} tags per user.",
        "vocal"      : " - The server with the most members in voice is {1} with {2} people talking.",
        "chatty"     : " - The most messages from a server is {1} with {2:.2f}% of the messages ive seen.",
        "dependand"  : " - The server who talks to me the most is {1} where I have sent {2} messages.",
    }
    # {0}     : Username
    # {1:.2f} : Messages seen
    world_spammy_user = " - The user who has sent the most messages is {0} with {1:.2f}% of all the messages I've seen."
    # {0}     : Command name
    # {1}     : Command uses
    world_best_command = " - The most popular command I have is `+{0}` with {1} uses"
    # {o}     : Online
    # {i}     : Idle
    # {v}     : In voice
    # {g}     : In Game
    world_member_stats = "Across all servers, there are {o} members online and {i} idle as well as {v} in voice and {g} in game."
    
class Awards:
    shorthelp = "makes me post a bunch of top 10s"
    longhelp = ("`+awards popular` the servers with the most members\n"
                "`+awards spacey` the servers with the most channels\n"
                "`+awards packed` the servers with the most people per channel\n"
                "`+awards empty` the servers with the least people per channel\n"
                "`+awards vocal` the servers with most members in voice\n"
                "`+awards gamer` the servers with the most members in game\n"
                "`+awards active` the servers with the most members online\n"
                "`+awards dependant` the servers I've spoken with the most\n"
                "`+awards shitpisting` the servers with the most tags per user\n"
                "`+awards spammy` the users who I have seen the most messages from \n"
                "`+awards command` the most used commands that I have\n"
                "`+awards richest` the users with the most coins")
    """
    Available commands:
    `+awards popular`
    `+awards spacey`
    `+awards packed`
    `+awards empty`
    `+awards vocal`
    `+awards gamer`
    `+awards active`
    `+awards dependant`
    `+awards shitposting`
    `+awards spammy`
    `+awards command`
    `+awards richest`
    """
    no_arguement = ""
    invalid_arguement = ""
    # All these end in a ": " as I append to the end
    beat_popular = "Total users on all servers: "
    best_spacey = "Total channels on all servers: "
    best_packed = "Global average: "
    best_empty = "Global average: "
    best_vocal = "Total users in voice: "
    best_gamer = "Total users in game: "
    best_active = "Global average: "
    best_dependant = "Total sent messages: "
    best_spammy = "Total messages scanned: "
    best_shitposting = "Total tags: "
    best_command = "Total command uses: "
    best_richest = "## will not be used"
    
class Avy:
    shorthelp = "lets me get the avatar of a user"
    longhelp = "`+avy ['username']\n`+avy server`"
    """
    Available commands:
    `+avy ['name']`
    `+avy server`
    """
    no_user_found = "I couldn't find a user with that name..."
    user_has_no_avatar = "That user has no custom avatar. Tell them they are unoriginal."

    
class Msgcount:
    shorthelp = "makes me generate a list of authors in this channel"
    longhelp = None
    
class Mabiwiki:
    shorthelp = "makes me search the Mabinogi wiki"
    longhelp = "`+mabiwiki 'query'`"
    """
    Available commands:
    +mabiwiki 'query'
    """
    no_query = "You asked me to search the Mabinogi wiki, but didn't tell me what to look for. Use `+mabiwiki 'query'`"
    returned_search = "I couldn't find anything for that query, so maybe try a search instead: "
    
class Autopost:
    shorthelp = "makes me post a message every so often"
    longhelp = ("`+autopost 'count' 'interval' [r] 'msg1' ['msg2' [...]]`\n"
                "makes me post a message every `interval` munutes for `count` cycles\n"
                "If a matching amount of messages is supplied and `r` is not added, then I will post the messages in order\n"
                "`+stop` will stop the posts")
    """
    Available commands:
    `+autopost 'count' 'interval' [r] 'message' ['message' ...]`
    `+stop`
    """
    not_enough_args = "You asked me to autopost messages, but didn't tell me enough. Use `+autopost 'count' 'interval' [r] 'msg1' ['msg2' ...]`"
    count_out_of_range = "I can only send up to 30 messages, so can you pass `count` as between 1 and 30 please." #range is 1 - 30
    interval_out_of_range = "I do not want to send too much too fast, but I don't want it to take too long either. Please set `interval` to between 3 and 60." #range is 3 - 60
    #this command listens for "+stop"
    # {0}     : The number of messages
    autopost_start = "I will post {0} messages. Type `+stop` to stop my posting"
    autopost_stop = "I will no longer post messages."
    
class Uplink:
    shorthelp = "makes me connect 2 servers together"
    longhelp = "`+uplink 'server' 'channel'`"
    """
    Available commands:
    `+uplink 'server' 'channel'
    """
    no_arguements = "You asked me to uplink, but to where? `+uplink 'serer' 'channel'`"
    server_not_found = "I couldn't find a server with that name..."
    # {0}     : Server name
    channel_not_found = "There is no channel with that name in {0}..."
    
    creating_uplink_host = "Creating uplink. . . ."
    # {0}     : Host server
    # {1}     : Host channel
    creating_uplink_dest = "This channel has been uplinked with **{0}#{1}** I will relay any messages sent in either channel to the other."
    #the bot listens for "++close"
    uplink_established_host = "Connection established. Use `++close` to stop the connection."
    
    redtext_message = "Error sending message - BAD GATEWAY"
    
    uplink_closed_dest = "Uplink closed. No more messages will be transmitted."
    uplink_closed_host = "Uplink closed."
    
class Ctrlf:
    shorthelp = "makes me search for past messages"
    longhelp = "`+ctrlf 'query'`"
    """
    Available commands:
    `+ctrlf 'query'`
    """
    no_arguement = "You asked me to look for something but didn't tell me what. Use `+ctrlf 'query'`"
    query_too_short = "I don't want to spam the channel, can you please have a query 4 characters or longer." #min length 4
    query_too_long = "Thats a bit specific don't you think? Maybe try less than 40 characters." #max length = 40
    no_permission = "I need the Read Message History permission to use this command."
    no_results = "Your search yielded no results."
    # {0}     : The number of matches
    found_matches_header = "Found {0} matches:"
    
class Dex:
    shorthelp = "makes me search the Pokédex"
    longhelp = ("`+dex 'number'`\n"
                "`+dex 'name'`\n"
                "`+dexentry 'num|name'` makes me get just the entries\n"
                "`+dexdata 'num|name'` makes me get just the numbers\n"
                "This command is only available in English.")
    """
    Available commands:
    `+dex 'number'`
    `+dex 'name'`
    `+dexentry 'num|name'`
    `+dexdata 'num|name'`
    Key: `H W` height and weight, `G` gender ratio, `B` body type
    `EXP` base yield, `FR CR` friendship and catchrate, `EV` yield
    `LV100` assumes 0EV, 0IV and a neutral nature
    This command is only available in english.
    """
    no_arguements = "You asked for a Pokédex entry but didn't tell me what to look for. Use `+{0} 'num|name'`"
    no_found_pokemon = "I could not find a Pokémon..."
    
class Dexdata:
    shorthelp = "makes me get a bunch of data about a Pokémon"
    longhelp = "`+dexdata 'num|name'`"

class Dexentry:
    shorthelp = "makes me get just the XYORAS entries for a Pokémon"
    longhelp = "`+dexentry 'num|name'`"
    
class Movedex:
    shorthelp = "makes me get data about a Pokémon move"
    longhelp = ("`+movedex 'name'`\n"
                "This command is only available in English.")
    """
    Availavble commands:
    `+movedex 'movename'`
    This command is only available in english
    """
    no_arguement = "You asked about a move, but didn't say which. Use `+movedex 'name'`"
    no_move_found = "I couldn't find a move with that name..."
    
class Pokestats:
    shorthelp = "makes me calcuate the maximum and minimum stats of a pokemon"
    longhelp = ("`+pokestats 'name|num'`\n"
                "This command is only available in English")
    """
    Available commands:
    `+pokestats 'name|num'
    This command is only available in english
    """
    no_arguement = "You asked about stats, but didn't tell me what Pokémon. Use `+pokestats 'name|num'`"
    no_found_pokemon = "I couldn't find the Pokémon you wanted..."
    
class Matchup:
    shorthelp = "makes me get type matchup data on a type"
    longhelp = "`+matchup 'type'`"
    """
    Available commands:
    `+matchup 'type'`
    This command is only available in english
    """
    no_arguement = "You asked for matchup data, but didn't tell me which one. Use `+matchup 'type'`"
    no_found_type = "I could not find a type with that name."
    
class Profile:
    shorthelp = "lets me keep track of your online profile"
    # {fields} : the fields for 'field'
    longhelp = ("`+profile [get ['username']]` gets yours or another user's profile\n"
                "`+profile nnid 'nnid'` sets your NNID\n"
                "`+profile alt 'nnid'` sets one of your up to 3 alt NNIDs\n"
                "`+profile game 'game'` sets one of your up to 8 games\n"
                "`+profile note 'note'` sets your custom message"
                "`+profile 'field' 'data'` sets one of your up to 5 custom fields\n"
                "Valid fields are: {fields}\n"
                "`+profile clear 'field'` clears a field (or field item in game and alt)\n"
                "`+profile delete` deletes your entire profile\n"
                "`+profile make` makes a new profile from scratch")
    """
    Available commands:
    `+profile [get ['username']]`
    `+profile nnid 'nnid'`
    `+profile alt 'nnid'`
    `+profile game 'game'`
    `+profile 'field' 'data'`
    `+profile clear 'field'
    `+profile delete`
    `+profile make`
    """
    
    #profile help
    help_squas_is_idiot_msg = "Sorry for the old profiles, but i changed the command to `+help profile` and I can't be bothered to retrogen old profiles."
    
    #profile get
    get_not_in_pm = "I cannot get profiles in PM. please use `+profile` to get your own profile."
    get_no_user_found = "I could not find that user..."
    get_target_no_profile = "The person you want does not have a profile set up."
    # {0}     : Target name
    get_header = "Profile for {0}:"
    # {0}     : List of games
    get_games_list = "Catch them playing: {0}"
    
    #profile setter
    setter_invalid_field = "There is not a field with that name..."
    setter_no_data = "You asked me to set a profile field, but didn't tell me to what..."
    # - These will be appended to setter_error_occured
    setter_too_many_alts = "Alt NNID count too long. Max 3 alt NNIDs"
    setter_too_many_games = "Game count too long. Max 8 games"
    setter_game_too_long = "Game name too long. Max 32 characters"
    setter_too_many_custom_fields = "Too many custom fields. Max 5"
    setter_data_too_long = "Profile data too long. Max 80 characters"
    #this appends an error to the message
    setter_error_occured = "I tried to set your field, but an error occured: "
    # {0}     : The field name
    setter_success = "I have set your profile {0}."
    
    #profile clearer
    clearer_no_arguements = "You asked me to clear a part of your profile, but didn't tell me which. Use `+profile clear 'field'`"
    clearer_invalid_field = "I could did not understand the field you want me to clear..."
    # - These will be appended to clearer_error_occured
    clearer_no_alts = "No alts to delete"
    clearer_alt_timeout = "Clear alt request timed out"
    clearer_no_games = "No games to delete"
    clearer_game_timeout = "Clear game request timed out"
    clearer_no_field = "Field not in profile"
    #this appends an error to the message
    clearer_error_occured = "I tried to clear your profile but an error occured: "
    #this command asks for an index number
    clearer_alt_footer = "Please enter the number of the alt to delete."
    #this command asks for a number or "all"
    clearer_game_footer = "Please enter the number of the game to delete."
    # {0}     : The field name
    clearer_success = "I have cleared your profile {0}."
    
    #profile delete
    #this asks for "confirm"
    delete_request = "Are you sure you want to delete your entire profile. Type `confirm`"
    delete_request_timeput = "Profile delete request timed out."
    delete_success = "I have deleted your profile."
    
    #profile make
    make_not_in_pm = "Since profile make takes a long time to execute, I have decided to limit it to PM only"
    """
    oh boy. this is gonna be fun
    The order of commands:
    The bot first asks for an NNID
    then a `;` semicolon seperated list of games
    then up to 5 fields field first then response next
    then a note
    but at any time, the user can do `+skip`
    """
    make_trigger_skip = "Alright then. Moving on."
    #the bot listens for an input or "+skip"
    make_nnid_request = "Firstly, lets hear your NNID or type `+skip` to move on."
    make_nnid_timeout = "Unfortunately, I can't wait forever so I will end the process here. Use `+help profile` for info on what you can do."
    #the bot listens for a ; seperated input or "+skip"
    make_games_request = "Next, lets here what you play or type `+skip` to move on. To input multiple games, use a `;` seperated list (e.g. \"Not a Hero;Half Life 3;Pacman CEDX\""
    make_games_timeout = "Unfortunately, I can't wait forever so I will end the process here. Use `+help profile` for info on what you can do."
    make_games_truncate_game_count = "Since a profile can only have 8 games, I will just use the first 8 on the list." #user has > 8 games
    make_games_truncate_game_name = "Since a profile game can only be 32 characters long, I will just truncate the ones that are longer." #user game > 32 chrs
    #the bot listens for a valid field name or "+skip"
    # {0}     : Number of remaining fields
    # {1}     : List of valid fields
    make_field_request = "You can add {0} more field(s) or use `+skip` to move on"
    make_field_timeout = "Its been a while. You must have nothing else to say. You can use `+help profile` to see how to update your profile"
    #the bot listens for a value
    # {0}     : Field name
    make_field_data_request = "And what is your {0}?"
    make_field_data_timeout = "I can't wait forever unfortunately, so I'm gonna stop here. Use `+help profile` for details about what you can add."
    make_field_data_too_long = "Unfortunately a field can only have 80 characters in it, so I cannot save this." #max 80 characters. req is skipped, not truncated
    #the bot listens for a value or "+skip"
    make_note_request = "Lastly is there anything you want to say to the world?"
    make_note_timeout = "I guess not. You can use `+help profile` to find out what you can do and `+profile note 'note'` to set your note."
    make_note_skipped = "I guess not. You can change it later with `+profile note 'note'` when you change your mind."
    make_note_too_long = "I can't make it more than 80 characters long unfortunately. You can set it again with `+profile note 'note'`" #max 80 chars
    make_success = "I have made your profile. Thanks for taking the time out to make one ^-^"
    
class Choose:
    shorthelp = "makes me pick from a list of options"
    longhelp = "`+choose 'optn1' 'optn2' [...]`"
    """
    Available commands:
    `+choose 'optn1' 'optn2' [...]`
    """
    no_choices = "You asked me to make a choice, but between what?"
    only_1_choice = "I cannot choose from one thing though...."
    outcomes_the_same = "The choice doesn't matter if the outcome is always the same..."
    
class Dice:
    shorthelp = "gives me some dice to roll for you"
    longhelp = "`+dice 'nDf' ['nDf' ...]`\nThe dice should be in D&D format where n is the (optional) number and f is the faces (e.g 2D6, 5D4 or D20)"
    """
    Available commands:
    `+dice 'nDf' ['nDf' ...]`
    """
    no_dice = "You asked me to roll some dice, but didn't give me any to roll. Use `+dice 'nDf' [...]`"
    too_many_dice_groups = "Unfortunately I can only roll 6 sets of dice at a time." #max 6
    invalid_dice = "Some of the dice you gave me were deformed. Dice should be formatted as nDf where n is optional number and f is faces."
    # {0}     : Number of faces
    faces_out_of_range = "Don't you think a {0} sided die is a bit silly, try something between 1 and 100." #between 1 - 100
    too_many_dice = "I can't carry that many dice. Try sets no bigger than 50." #max 50
    results_header = "I rolled those dice for you and got:"
    # {0}     : Dice count
    # {1}     : Dice Faces
    # {2}     : List of results (fmt: [1, 2, 3])
    # {3}     : Total
    results_line = "**{0}D{1}**: {2} totaling **{3}**"
    # {0}     : Counter (fmt {1:10, 2:3, 5:11})
    results_counting_footer = "I also counted the dice for you: {0}"
    # {0}     : Total
    results_tallying_footer = "The total of all the dice is {0}"
    msg_char_limit_hit = "I tried to post those dice, but Discord has a thing where I cant post a message that long..."
    
class Random:
    shorthelp = ""
    longhelp = ("`+random 'subcommand'` chosen from below\n"
                "```xl\nAvailable Subcommands\n"
                "number ['max'] lenny\n"
                "coin           tag\n"
                "ship ['m1']    team ['size']\n"
                "channelteam    onlineteam\n"
                "8ball          cat\n"
                "emoji          privatematch\n"
                "lewd           smash\n"
                "strat          weapon\n"  
                "For Emzilla: kaomoji\n"
                "By Xgm: honk\n"
                "By Leonie: encouragement happysong\n"
                "By Frawst And Toby: squiddy```")
    """
    Available commands:
    `+random number ['max']`
    `+random lenny`
    `+random heart` <<Hidden
    `+random coin`
    `+random tag`
    `+random ship ['m1']`
    `+random shipname` <<Hidden
    `+random team ['size']`
    `+random channelteam ['size']`
    `+random onlineteam ['size']`
    `+random 8ball`
    `+random cat`
    `+random emoji`
    `+random kaomoji` <<For Emzilla
    `+random lewd`
    `+random puffu` <<Hidden
    `+random smash`
    `+random strat`
    `+random weapon`
    `+random privatematch`
    `+random face` <<Hidden
    `+random colour` <<Hidden
    `+random encouragement` <<By Leonie
    `+random happysong` <<By Leonie
    `+random honk` <<By xgchen
    `+random squiddy` <<By Frawst and Toby
    """
    #random coin
    coin_heads_up = "Heads side up"
    coin_tails_up = "Tails side up"
    coin_on_side = "On its side"
    # {0}     : ^ one of these
    coin_response = "I flipped a coin and it landed _**{0}**_"
    
    #random shipname
    shipname_failed = "I tried to make a shipname, but I couldn't."
    
    #random team
    team_not_enough_people = "There are not enough ppl to make a team."
    
class Remove:
    shorthelp = "makes me delete messages from chat"
    longhelp = ("`+remove user 'member' [['member' ...] 'limit']` deletes conversations. Limit is required for multi user delete\n"
                "`+remove embeds ['limit']` deletes images and links\n"
                "`+remove contains 'content' ['limit']` deletes keywords\n"
                "`+remove command 'calls' ['limit']` deletes commands. Calls is a space seperated list (`? ~ pls`)\n"
                "`+remove all 'limit'` for when you want to forget.")
    """
    Available commands:
    `+remove user '@username' ['@username' [...]] ['limit']`
    `+remove embeds ['limit']`
    `+remove contains 'content' ['limit']`
    `+remove command 'calls' ['limit']`
    `+remove all ['limit']`
    """
    no_arguement = "You asked me to remove something, but didn't tell me what. Use `+help remove`"
    invalid_arguement = "I do not know what I am supposed to remove. Use `+help command`"
    no_logsfrom_permission = "I require the Read Message History permission to use this command."
    no_delete_permission = "I require the Manage Messages permission to delete messages."
    # {0}     : Deleted message count
    remove_success = "I have deleted {0} messages."
    
    #remove user
    #this message waits for "continue"
    # {0}     : the (> 1) number of users to delete
    user_multi_request = "You are about to delete messages from {0} users. Type `continue` to confirm."
    user_nulti_timeout = "Remove conversation timeout."
    
    #remove contains
    contains_no_query = "You asked me to remove specific words, but didn't tell me which."
    contains_query_too_small = "I don't want to hit too many messages, so queries need to be 3 letters long." #min 3 letters
    
    #remove command
    command_no_query = "You asked me to delete command calls, but didn't tell me which one. Use a space seperated list of calls (e.g. `~ ? pls`)"
    
class Cleanme:
    shorthelp = "archives and deletes your own messages"
    longhelp = "`+cleanme ['limit']`\nThis creates an archive, so no using it to hide from the mods ;)"
    """
    Available commands:
    `+cleanme 'limit'`
    This posts a +archive
    """
    
class Cleanup:
    shorthelp = "removes my own messages and if possible my command calls too."
    longhelp = "`+cleanup ['limit']`"
    """
    Available commands:
    `+cleanup ['limit']`
    """
    #uses things in remove...
    
class Schedule:
    shorthelp = "makes me pull a copy of the splatoon schedule"
    longhelp = "This command is only available in english."
    """
    This command is only available in english
    """
    
class Tag:
    shorthelp = "lets me store and recall messages, image links or custom scripts."
    longhelp = ("`+tag 'tagname'` recalls a tag\n"
                "`+tag create 'tagname' 'content'` makes a new tag\n"
                "`+tag edit 'tagname' 'new content'` edits a tag\n"
                "`+tag rename 'tagname' 'new name'` renames a tag\n"
                "`+tag delete 'tagname'` deletes a specific tag\n"
                "`+tag delete all` deletes _all_ of your tags\n"
                "`+tag nsfw 'tagname'` makes a tag not show up in `+tag random`\n"
                "`+tag random` pulls a random tag.\n"
                "`+help taginfo` gets help on owner related commands\n"
                "`+help tagmovement` gets help on server related commands\n"
                "`+help tagna` gets help on scripting related commands")
    """
    Available commands:
    -- user
    `+tag 'tagname'`
    `+tag create 'tagname' 'content'`
    `+tag edit 'tagname' 'new content'`
    `+tag rename 'tagname' 'new name'`
    `+tag delete 'tagname'`
    `+tag delete all`
    `+tag nsfw 'tagname'`
    `+tag random`
    
    `+tag gift 'tagname' 'new owner'`
    `+tag info 'tagname'`
    `+tag list ['username']`
    `+tag list all`
    `+tag search 'query'`
    `+tag claim 'tagname'`
    
    `+tag export`
    `+tag import` <<Upload
    `+tag clone 'tagname' 'server' ['new name']`
    `+tag pull 'tagname' 'server' ['new name']`
    `+tag restrict 'tagname'`

    `+tag eval 'content' ['args']`
    `+tag raw 'tagname'`
    `+tag debug 'tagname'`
    `+tag deval 'content' ['args']`
    `+tag closed 'tagname'`
    `+tag hidden 'tagname'`

    -- bot admin
    `+tag nsfw all`
    
    -- server admin
    `+tag welcome 'content'
    
    -- Delegations:
    `+help taginfo` handles:
      gift, info, list, search, claim, nsfw all, welcome
    `+help tagmovement` handles:
      import, export, clone, pull, restrict
    `+help tagna` handles:
      eval, raw, debug, deval, closed, hidden
    """
    no_arguement = "You asked me about tags, but didn't tell me what to do. Use `+help tag`"
    cannot_modify_someone_elses_tag = "I'm afraid I cannot allow you to tamper with a tag that does not belong to you."
    orphan_name = "Someone"
    
    #tag post
    # {0}     : The query
    post_tag_not_found = "I cannot find a tag called '{0}'"
    
    #tag create
    create_not_enough_args = "You asked me to create a tag, but didn't tell me what to make. USe `+tag create 'name' 'content'`"
    create_reserved_name = "I cannot create a tag with a reserved name."
    create_everyone_shame = "I cannot create a tag that contains @\u200beveryone or @\u200bhere ~~and you should be ashamed for trying.~~"
    create_tag_exists = "The tag name you gave me already exists."
    #accepts any message or "abort"
    # {0}     : Tagname
    create_content_request = "You asked to create a tag called '{0)' but didn't tell me what to put in it, so I will add your next message, or type `abort` to cancle"
    create_content_timeout = "Tag create timed out."
    # {0}     : Tagname
    create_success = "I have created tag {0}."
    create_too_many_args_warning = "You may want to check your tag since you gave me more than 4 parts..."
    
    #these are errors that modify_tag will throw
    tagname_exists_error = "Tagname already in use"
    content_mentions_everyone_error = "Tag cannot mention everyone or here"
    
    #tag edit
    edit_no_args = "You asked me to edit a tag, but didn't tell me which one. Use `+tag edit 'tagname' 'content'"
    edit_not_found = "I cannot find a tag with that name..."
    #this is appended with an error message
    edit_error = "I tried to edit your tag, but something went wrong: "
    edit_success = "I have edited that tag."
    
    #tag rename
    rename_no_args = "You asked me to rename a tag, but didn't tell me which. Use `+tag rename 'tagname' 'newname'`"
    rename_reserved_name = "I cannot name a tag one ofthe reserved names..."
    rename_non_existant_tag = "I cannot find a tag with that name..."
    #this is appended with an error message
    rename_error = "I tried to rename that tag but something went wrong: "
    # {0}     : New tagname
    rename_success = "I have changed that tags name to '{0}'"
    
    #tag delete
    delete_no_args = "You asked me to delete a tag, but didn't tell me which one. Use `+tag delete 'tagname'`"
    delete_not_found = "I couldn't find a tag with that name."
    delete_success = "I have deleted that tag."
    delete_all_no_tags = "You do not have any tags to delete..."
    #this waits for "confirm"
    # {0}     : Number of tags to delete
    delete_all_request = "You are about to delete {0} tags. Type `confirm` to continue."
    delete_all_timeout = "Tag delete all request timed out"
    # {0}     : Number of tags deleted
    delete_all_success = "I have deleted {0} tags."
    
    #tag welcome
    welcome_no_perms = "You must be a server manager to use this command."
    #this is appended into welcome_no_args as {0}
    welcome_not_set = "Nothing"
    # {0}     : Current welcome
    welcome_no_args = "The current welcome message is \"{0}\". To change it. Use `+tag welcome 'new contents'`"
    welcome_success = "I have changed the server's welcome tag"
    
    #tag clone
    clone_no_args = "You asked me to clone a tag, but didn't tell me to where. Use `+tag clone 'tagname' 'server' ['newname']`"
    clone_tag_not_found = "I couldn't find a tag with that name..."
    clone_server_not_found = "I couldn't find the target server..."
    clone_caller_not_on_server = "I cannot clone to that server because you are not a member on it..."
    clone_dest_tag_exists = "I cannot clone to that server because they already have a tag with that name. USe `+tag clone 'tagname' 'server' 'newname'`"
    clone_server_disabled_tags = "I cannot clone to that server because they have disabled the tag command."
    clone_restricted_tag = "I cannot clone this tag because it has been protected by its owner. Ask them to use `+tag restrict` to remove the protection."
    # {0}     : Tag name
    # {1}     : Dest server
    clone_success = "I have cloned tag {0} onto {1}."
    
    #tag pull
    pull_no_args = "You asked me to pull a tag from another server, but didn't tell me which one. Use `+tag pull 'tagname' 'server' ['newname']"
    pull_server_not_found = "I cannot find the target server..."
    pull_caller_not_on_server = "I cannot pull any tags from that server because you are not on them."
    pull_tag_not_found = "I cannot find a tag on the other server with that name"
    pull_dest_tag_exists = "There is already a tag on this server with that name. Use `+tag pull 'tagname' 'server' 'newname'`"
    pull_server_disabled_tags = "I cannot pull from that server since they disabled tags..."
    pull_restricted_tag = "I cannot pull that tag because the owner has protected it. Ask them to do `+tag restrict` to take off the protection."
    # {0}     : Tag name
    # {1}     : Src server
    pull_success = "I have pulled tag {0} from {1}"
    
    #tag restrict
    restrict_no_args = "You asked me to protect a tag from clone and pull, but didn't tell me which. Use `+tag restrict 'tagname'`"
    restrict_tag_not_found = "I could not find the tag you asked for."
    restrict_changed_to_true = "I have protected that tag. Only you will be able to clone it to or pull it from other servers."
    restrict_changed_to_false = "I have removed the protection on this tag. Anyone can now clone or pull it."
    
    #tag gift
    gift_no_args = "You asked me to give away a tag, but didn't give me enough info. Use `+tag gift 'tagname' 'owner'`"
    gift_tag_not_found = "I couldn't find a tag with that name..."
    gift_target_not_found = "I cannot find the person you wanted to give the tag to..."
    #the bot listens for "+accept {1}"
    # {0}     : Target name
    # {1}     : Tagname
    gift_request = "{0}, please type `+accept {1}` to get this tag."
    gift_timeout = "Tag gift request timed out."
    gift_success = "I have transferred ownership of this tag."
    
    #tag info
    info_no_args = "You asked about info for a tag, but didn't tell me which one. USe `+tag info tagname`"
    info_tag_not_found = "I could not find a tag with that name..."
    # {0}     : Tag name
    info_header = "Info for `+tag {0}`:"
    # {0}     : Owner name
    info_owner = " - This tag is owned by **{0}**"
    # {0}     : Tag name
    info_owner_left = " - This tag is orphaned. Use `+tag claim {0}` to take it."
    # {0}     : Tag uses
    info_total_uses = " - This tag has **{0}** uses"
    # {0}     : Total duplicates (>= 2)
    info_duplicates = " - This tag is identical accross {0} servers"
    info_is_nsfw = " - This tag is marked NSFW"
    info_is_restricted = " - This tag is protected"
    info_is_closed_source = " - This tag is closed source"
    info_is_deleting = " - This tag will delete its call"
    
    #tag list
    list_target_not_found = "I couldn't find the member to list tags for..."
    # {0}     : Server name
    # {1}     : Tag list (format "`, `".join)
    list_server_element = "Tags for {0}: {1}"
    list_msg_too_long = "Your tags are too long to send in a single message, so I will send a file instead."
    list_all_orphan_name = "Orphaned"
    
    #tag nsfw
    nsfw_no_args = "You asked me to toggle NSFW on a tag, but didn't tell me which. Use `+tag nsfw 'tagname'`"
    nsfw_tag_not_found = "I couldn't find a tag with that name..."
    nsfw_changed_to_true = "I have marked that tag as NSFW. It will no longer show up in `+tag random`"
    nsfw_changed_to_false = "I have removed the NSFW mark on this tag. It will show up in `+tag random` again."
    #this listens for "continue"
    # {0}     : Tag count
    nsfw_all_request = "You are about to remove the NSFW marks on {0} tags. Type `continue` to continue."
    nsfw_all_timeout = "Tag nsfw all request timed out."
    nsfw_all_success = "I have removed all NSFW marks on this server."
    
    #tag random
    random_no_sfw_tags = "There are no (SFW) tags on this server to choose from..."
    # {0}     : Owner name
    # {1}     : Tag name
    # {2}     : Tag content
    random_returned = "{0}'s tag '{1}'\n{2}"
    
    #tag search
    search_no_query = "You asked me to search for tags, but didn't tell me which one. Use `+tag search 'query'`"
    search_query_too_short = "I am going to need a larger query to work with. Please use at least 3 letters." #min 3
    search_no_results = "Your search returned no results..."
    # {0}     : Owner name
    # {1}     : Tag name
    # {2}     : Tag content
    search_one_result = "{0}'s tag '{1}'\n{2}"
    # {0}     : Tag count
    # {1}     : Tag list (format ", ".join)
    search_multiple_results = "I found {0} tags:\n{1}"
    
    #tag claim
    claim_no_arg = "You asked me to give you a tag, but didn't say which. Use `+tag claim 'tagname'`"
    claim_tag_not_found = "I could not find a tag with that name."
    # {0}     : Owner name
    claim_already_owned = "That tag already belongs to {0}. Maybe ask them to `+tag gift` it to you."
    claim_success = "I have given you that tag."
    
    #tag export
    export_no_tags = "You do not have any tags to export."
    # {0}     : Tag count
    # {1}     : Tag list
    export_overview = "Exporting {0} tags:\n{1}"
    export_overview_count_only = "Exporting {0} tags."
    
    #tag import
    import_no_attachment ="You asked me to import, but didn't give me a file. Attach a file and give it the caption `+tag import`"
    import_fetch_error = "An error occured and I could not retrieve your file."
    import_fetch_timeout = "It took too long to retrieve your file... Sorry about that"
    import_file_corruption = "It seems your file is corrupted. Use `+tag export` to get a fresh file."
    #bot listens for "++nsfw"
    import_nsfw_request = "Do you wish to import tags marked nsfw? Use `++nsfw`"
    # {0}     : Success count
    # {1}     : Total attempts
    # {2}     : Failed count
    # {3}     : Failed list
    # {4}     : Success list
    import_success = "I have imported {0}/{1} tags with {2} failures.\nSuccess: {4}\nFailed: {3}"
    import_success_no_success_list = "I have imported {0}/{1} tags with {2} failures.\nFailed: {3}"
    import_success_no_tag_list = "I have imported {0}/{1} tags with {2} failures."
    
    #tag hidden
    hidden_no_args = "You asked me to delete your calls on a tag, but didn't tell me which one. Use `+tag hidden 'tagname'`"
    hidden_tag_not_found = "I could not find a tag with that name."
    hidden_changed_to_true = "I will start deleting call messages for this tag."
    hidden_changed_to_false = "I will stop deleting call messages for this tag."
    
    #tag closed
    closed_no_args = "You asked me to close the source of a TagNA tag, but didn't say which, Use `+tag closed 'tagname'`"
    closed_tag_not_found = "I cannot find a tag with that name."
    closed_changed_to_true = "I will start rejecting `+tag raw` commands for this tag."
    closed_changed_to_false = "I will stop rejecting `+tag raw` commands for this tag."
    
    #tag eval
    #plug http://fennekid.github.io here
    eval_no_args = "You asked me to eval a tag, but didn't give me a tag. Use `+tag eval 'contents' ['args']`"
    reply_too_long = "I tried to evaluate that tag, but the reply was too long."
    
    #tag raw
    raw_no_args = "You asked for a raw tag, but didn't tell me which. Use `+tag raw 'tagname'`"
    raw_closed_tag = "The owner of that tag has made it closed source."
    
class Taginfo:
    shorthelp = "This is a help delegation for `+tag`"
    longhelp = ("`+tag gift 'tagname' 'member'` gives away a tag\n"
                "`+tag info 'tagname'` gets info about a tag\n"
                "`+tag list ['member']` gets your's or another user's tags\n"
                "`+tag list all` gets all the tags on the server in a file\n"
                "`+tag search 'query'` searches tags by name\n"
                "`+tag claim 'tagname'` claims a tag left behind by a person who left\n"
                " -- Bot Admin --\n"
                "`+tag nsfw all` removes the nsfw from all tags on the server\n"
                " -- Server Admin --\n"
                "`+tag welcome ['new content']` sets the tag that is used in +welcome")
    """
    This is a help shell to break down +tag
    Available commands:
    -- user
    `+tag gift 'tagname' 'new owner'`
    `+tag info 'tagname'`
    `+tag list ['username']`
    `+tag list all`
    `+tag search 'query'`
    `+tag claim 'tagname'`
    -- bot admin
    `+tag nsfw all`
    -- server admin
    `+tag welcome 'content'
    """

class Tagmovement:
    shorthelp = "This is a help delegation for `+tag`"
    longhelp = ("`+tag export` write all of your non-private tags to a file.\n"
                "`+tag import` `<<file upload` adds all the tags in the file to the server.\n"
                "`+tag clone 'tagname' 'server' ['newname']` clones a tag to the target server\n"
                "`+tag push 'tagname' 'server' ['newname']` pulls a tag from the source server\n"
                "`+tag restrict 'tagname'` toggles whether a tag can be pulled or cloned\n"
                "To use `import`, you should drop a tag file into discord and make the caption `+tag import`")
    """
    This is a help shell to break down +tag
    Available commands:
    `+tag export`
    `+tag import` <<Upload
    `+tag clone 'tagname' 'server' ['new name']`
    `+tag pull 'tagname' 'server' ['new name']`
    `+tag private 'tagname'`
    """

class Tagna:
    shorthelp = "This is a help delegation for `+tag`"
    longhelp = ("`+tag eval 'content' ['args']` lets you execute a tag without saving\n"
                "`+tag raw 'tagname'` gets the raw content of a non-secret tag\n"
                "`+tag debug 'tagname'` posts a execution debug of a tag\n"
                "`+tag deval 'content' ['args']` same as debug + eval\n"
                "`+tag closed 'tagname'` toggles a tag's closed-source status\n"
                "`+tag hidden 'tagname'` toggles whether a tag call should be deleted")
    """
    This is a help shell to break down +tag
    Available commands:
    `+tag eval 'content' ['args']`
    `+tag raw 'tagname'`
    `+tag debug 'tagname'`
    `+tag deval 'content' ['args']`
    `+tag secret 'tagname'`
    """
    
class Toggle:
    shorthelp = "Lets me disable commands"
    longhelp = ("`+toggle list` lists commands that have been disabled\n"
                "`+toggle 'Set'` disables or enables all commands in the set\n"
                "`+toggle 'command'` disables or enables individual commands\n"
                "`+toggle !` disables or enables alt calling with !calls\n"
                "With the exception of `!`, All disables commands can still be used by Moderators.")
    """
    Available commands:
    `+toggle list`
    `+toggle 'command set'`
    `+toggle 'command name'`
    `+toggle !`
    """
    no_arguements = "You asked me about toggling, but didn't tell me what to do. Use `+help toggle`"
    
    #toggle list
    list_no_disabled_commands = "Alls good here. None of my commands are disabled."
    list_header = "Disabled commands:"
    # {0}     : Category name
    # {1}     : Command List
    list_command_entry = "**{0}**: {1}"
    list_alt_calling_disabled = "Alt calling on `!` is disabled."
    
    #toggle alt
    alt_call_disabled = "I will no longer listen to !command calls."
    alt_call_enabled = "I will start listening to !command calls except where they will conflict with @R. Danny"
    
    #toggle command
    command_cannot_disable_bot = "I cannot disable any **Bot** category commands."
    command_disabled = "I have disabled that command."
    command_enabled = "I have enabled that command."
    
    #toggle set
    set_cannot_disable_bot = "I cannot disable my **Bot** categury commands."
    set_command_or_set_not_found = "I could not find the command or command set you are looking for..."
    # {0}     : Count
    # {1}     : Command list
    set_disabled = "I have disabled {0} commands:\n{1}"
    set_enabled = "I have enabled {0} commands:\n{1}"
    
class Welcome:
    shorthelp = ""
    longhelp = ""
    """
    Available commands:
    `+welcome 'type' 'code'`
    `+welcome info`
    
    Availaboe types:
    `dest`    the place to send to
        `server`  to server.default_channel
        `here`    to message.channel
        `owner`   to server.owner PM
        `new`     to new member PM
    `message` the message to send
        `none`    disables sending
        `basic`   generic message
        `hug`     friendly message
        `tag`     use tag welcome
    `roles`   the giveme to assign
        `giveme`  to start giving roles
        `none`    to stop giving roles
    `wait`    the time to post a message
        `instant` posts on join
        `typing`  posts on first typing
        `message` posts on first message
    
    Tag replacement markers:
    {user}  : username
    {@user} : usermention
    {id}    : user id
    """
    welcome_types = {
        "message": {
            "none": "Do nothing",
            "basic": "Send a generic message",
            "hug": "Send a welcome hug",
            "tag": "Use `+tag welcome`"
        },
        "dest": {
            "server": "Send to the default channel",
            "here": "Send to this channel",
            # {0}     : Owner name
            "owner": "PM {0}",
            "new": "PM the new user"
        },
        "roles": {
            "giveme": "Assign `+giverole welcome`",
            "none": "Will not assign roles"
        },
        "wait": {
            "instant": "Send message instantly",
            "typing": "Wait for typing",
            "message": "Wait for message"
        }
    }
    
    no_arguement = "You asked about welcome behaviours, but didn't tell me what to change. Use `+help welcome` for details"
    # {0}     : Type 
    # {1}     : Message from dict
    change_success = "I have changed the welcome {0} to **{1}**"
    
    #messages to the server
    # {0}     : Member name
    # {1}     : Server name
    server_welcome_message = "Welcome to the {1} server, {0}. Have a nice stay."
    server_wait_on_message = "By the way, {0} is a new user."
    # {0}     : Member name
    server_welcome_hug = "Yay~! New member! Hi {0}! \\*hug*"
    
    #messages sent to owner
    # {0}     : Member name
    # {1}     : Server name
    owner_welcome_message = "{0} has just joined your {1} server."
    owner_welcome_hug = "Um... {0} just joined {1}. Good luck \\*hug*"
    
    #messages sent to user
    user_welcome_message = "Welcome to our server. This message is a bit boring so you may wanna ask one of the mods to set up a `+tag welcome` to make this message nicer :3"
    user_welcome_hug = "Welcome to our server \\*hug*"
    
    # {0}     : Member name
    welcome_no_tag = "Welcome to our server {0}. I was meant to post a better message, but none of the mods have set up a `+tag welcome` yet..."
    
    welcome_role_broken = "I was meant to give you a special new member role, but I cannot find it. It must have been changed or removed"
    no_permission_for_roles = "I require the Manage Roles permission to assign roles"
    no_welcome_role_set_up = "I was asked to give you a role, but wasn't told which one. Can a moderator please set up `+giverole welcome`"
    
    no_permission_for_default_channel = "I require the Send Messages permission for the default channel to use this command."
    
    #welcome info
    # {0}     : Message from the dict
    # {1}     : Dest from the dict
    info_message = " - My messaging behaviours are **{0}** and **{1}**\n - Use `+welcome message none` to disable"
    info_no_message_sent = " - I will not send any messages."
    # {0}     : Wait timer
    info_wait = " - My welcome delay behaviour is **{0}**"
    info_add_role = " - I will assign `+giverole welcome` when a member joins.\n - Use `+welcome role none` to disable"
    
class Misc:
    #called 25% on table flip
    table_unflip = "nuu! leave the tables alone! ┬─┬﻿ ノ( ゜-゜ノ)"
    
    #called when quotes mismatch
    quote_mismatching = "I could not understand your command because you mismatched quotes..."
    
    #called on redtext error
    bad_gateway_error_message = "You know that red message thing that sometimes happens? Yeah. Us bots get that too."

    name_choice_footer = "Enter the number only"
    name_choice_too_long = "The name search you tried means there are too many people to choose. Maybe consider a mention or DiscordTag instead"